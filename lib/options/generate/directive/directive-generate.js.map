{"version":3,"file":"directive-generate.js","sourceRoot":"","sources":["../../../../src/options/generate/directive/directive-generate.ts"],"names":[],"mappings":"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","sourcesContent":["import { inject, injectable } from 'inversify';\r\nimport inquirer = require('inquirer');\r\nimport { QuestionAnswer } from '../../../core/question-answer.model';\r\nimport { Logger } from '../../../utils/logger.util';\r\nimport { FileCreator } from '../../../core/file-creator/file-creator';\r\nimport { DIRECTIVE_TS } from './directive-generate-template';\r\nimport { BaseGenerate } from '../base-generate';\r\n\r\n@injectable()\r\nexport class DirectiveGenerate extends BaseGenerate {\r\n\r\n    constructor(\r\n        @inject('Logger') private logger: Logger\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    public async execute() {\r\n        let answer: QuestionAnswer = await this.question();\r\n        let name = answer.value.trim().toLowerCase();\r\n\r\n        if (this.isValid(name)) {\r\n            this.name = name;\r\n\r\n            if (this.name.startsWith('/'))\r\n                this.name = this.name.substr(1);\r\n            if (this.name.endsWith('/'))\r\n                this.name = this.name.substr(0, this.name.length - 1);\r\n\r\n            await this.startCreateDirective();\r\n        }\r\n        else\r\n            await this.execute();\r\n    }\r\n\r\n    public question(): Promise<QuestionAnswer> {\r\n        return inquirer.prompt([{ \r\n            name: 'value',\r\n            type: 'input',\r\n            message: 'What is path and name? (ex.: directives/tooltip)',\r\n        }]);\r\n    };\r\n\r\n    public isValid(name: string): boolean {\r\n        if(name === '') {\r\n            this.logger.showError('Cannot be empty.');\r\n            return false;\r\n        }\r\n        if(name.includes(' ')) {\r\n            this.logger.showError('Cannot contains whitespace.');\r\n            return false;\r\n        }\r\n        if(/[!$%^&*()+|~=`{}\\[\\]:\";'<>?,.]/.test(name)) {\r\n            this.logger.showError('Cannot have the following symbols: !$%^&*()+|~=`{}\\[\\]:\";\\'<>?,.');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private async startCreateDirective() {\r\n        let creator = new FileCreator();\r\n        let { fileInstructions, lastDirectory } = this.getBaseFileInstructions();\r\n\r\n        if (lastDirectory)\r\n            lastDirectory.children.push({\r\n                name: `${this.fileName}.directive.ts`,\r\n                content: this.replaceVariablesInContentFile(DIRECTIVE_TS)\r\n            });\r\n        else\r\n            fileInstructions.push({\r\n                name: this.fileName,\r\n                content: this.replaceVariablesInContentFile(DIRECTIVE_TS)\r\n            });\r\n\r\n        creator.initialize(fileInstructions);\r\n\r\n        await creator.startCreateFiles((response) => {\r\n            if (!response.error) {\r\n                this.logger.showCreated(response.fileInstruction.completePath());\r\n            }\r\n            else {\r\n                this.logger.showError(response.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    public getValueByName(name: string){\r\n        switch(name) {\r\n            case 'Name':\r\n                return this.fileName;\r\n            case 'FriendlyName':\r\n                return this.fileFriendlyName;\r\n        }\r\n        return '';\r\n    }\r\n}"]}