{"version":3,"file":"generate.js","sourceRoot":"","sources":["../../../src/options/generate/generate.ts"],"names":[],"mappings":";;;AAAA,uCAA+C;AAC/C,mCAAsC;AACtC,iCAAgC;AAGhC,6DAAsD;AAOtD;IACI,kBAC8B,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAExC,IAAI,SAAG,CAAC,eAAe,EAAE;YACrB,IAAI,CAAC,OAAO,EAAE,CAAC;aACd;YACD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,8CAA8C,CAAC,CAAC;YACtE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;IACL,CAAC;IAEa,0BAAO,GAArB;;;;;4BACiC,qBAAM,IAAI,CAAC,QAAQ,EAAE,EAAA;;wBAA9C,MAAM,GAAmB,SAAqB;wBAE3C,KAAA,MAAM,CAAC,KAAK,CAAA;;iCACV,mCAAa,CAAC,IAAI,CAAC,CAAnB,wBAAkB;iCAGlB,mCAAa,CAAC,MAAM,CAAC,CAArB,wBAAoB;iCAGpB,mCAAa,CAAC,SAAS,CAAC,CAAxB,wBAAuB;iCAGvB,mCAAa,CAAC,OAAO,CAAC,CAAtB,wBAAqB;;;4BARtB,qBAAM,SAAG,CAAC,MAAM,CAAe,cAAc,CAAC,EAAA;;wBAA9C,SAA8C,CAAC;wBAC/C,yBAAM;4BAEN,qBAAM,SAAG,CAAC,MAAM,CAAiB,gBAAgB,CAAC,EAAA;;wBAAlD,SAAkD,CAAC;wBACnD,yBAAM;4BAEN,qBAAM,SAAG,CAAC,MAAM,CAAoB,mBAAmB,CAAC,EAAA;;wBAAxD,SAAwD,CAAC;wBACzD,yBAAM;4BAEN,qBAAM,SAAG,CAAC,MAAM,CAAkB,iBAAiB,CAAC,EAAA;;wBAApD,SAAoD,CAAC;wBACrD,yBAAM;;;;;KAEjB;IAEO,2BAAQ,GAAhB;QACI,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACpB,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,qCAAqC;gBAC9C,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,mCAAa,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,KAAK,IAAK,OAAA,CAAC;oBACrD,IAAI,EAAG,mCAAqB,CAAC,GAAG,CAAC;oBACjC,KAAK,EAAG,mCAAqB,CAAC,GAAG,CAAC;iBACrC,CAAC,EAHsD,CAGtD,CAAC;aACN,CAAC,CAAC,CAAC;IACR,CAAC;IAAA,CAAC;IAzCO,QAAQ;QADpB,sBAAU,EAAE;QAGJ,mBAAA,kBAAM,CAAC,QAAQ,CAAC,CAAA;OAFZ,QAAQ,CA0CpB;IAAD,eAAC;CAAA,AA1CD,IA0CC;AA1CY,4BAAQ","sourcesContent":["import { inject, injectable } from 'inversify';\r\nimport inquirer = require('inquirer');\r\nimport { CLI } from '../../cli';\r\nimport { QuestionAnswer } from '../../core/question-answer.model';\r\nimport { Logger } from '../../utils/logger.util';\r\nimport { GenerateTypes } from './generate-types.enum';\r\nimport { PageGenerate } from './page/page-generate';\r\nimport { ServiceGenerate } from './service/service-generate';\r\nimport { DialogGenerate } from './dialog/dialog-generate';\r\nimport { DirectiveGenerate } from './directive/directive-generate';\r\n\r\n@injectable()\r\nexport class Generate {\r\n    constructor(\r\n        @inject('Logger') private logger: Logger\r\n    ) {\r\n        if (CLI.isNimbleProject())\r\n            this.execute();\r\n        else {\r\n            this.logger.showError('To continue you must be in a Nimble project.');\r\n            process.exit(0);\r\n        }\r\n    }\r\n\r\n    private async execute() {\r\n        let answer: QuestionAnswer = await this.question();\r\n\r\n        switch(answer.value) {\r\n            case GenerateTypes.PAGE:\r\n                await CLI.inject<PageGenerate>('PageGenerate');\r\n                break;\r\n            case GenerateTypes.DIALOG:\r\n                await CLI.inject<DialogGenerate>('DialogGenerate');\r\n                break;\r\n            case GenerateTypes.DIRECTIVE:\r\n                await CLI.inject<DirectiveGenerate>('DirectiveGenerate');\r\n                break;\r\n            case GenerateTypes.SERVICE:\r\n                await CLI.inject<ServiceGenerate>('ServiceGenerate');\r\n                break;\r\n        }\r\n    }\r\n\r\n    private question(): Promise<QuestionAnswer> {\r\n        return inquirer.prompt([{ \r\n            name: 'value',\r\n            type: 'list',\r\n            message: 'Which what do you want to generate?',\r\n            choices: Object.keys(GenerateTypes).map((key, index) => ({\r\n                name: (GenerateTypes as any)[key],\r\n                value: (GenerateTypes as any)[key],\r\n            }))\r\n        }]);\r\n    };\r\n}"]}