{"version":3,"file":"base-generate.js","sourceRoot":"","sources":["../../../src/options/generate/base-generate.ts"],"names":[],"mappings":"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","sourcesContent":["import { QuestionAnswer } from '../../core/question-answer.model';\r\nimport { CLI } from '../../cli';\r\nimport { injectable } from 'inversify';\r\n\r\n@injectable()\r\nexport abstract class BaseGenerate {\r\n    protected name!: string;\r\n    protected get fileName() {\r\n        if (this.name.includes('/')) {\r\n            let splitted = this.name.split('/');\r\n            return splitted[splitted.length - 1];\r\n        }\r\n        return this.name;\r\n    }\r\n    protected get fileFriendlyName() {\r\n        let name = this.fileName;\r\n\r\n        if (name.includes('-'))\r\n            name = name.split('-').map((part) => part.charAt(0).toUpperCase() + part.slice(1)).join('');\r\n\r\n        if (name.includes('_'))\r\n            name = name.split('_').map((part) =>  + part.slice(1)).join('');\r\n\r\n        name = name[0].toUpperCase() + name.substr(1);\r\n        \r\n        return name;\r\n    }\r\n    protected get directories() {\r\n        if (this.name.includes('/')) {\r\n            let splitted = this.name.split('/');\r\n            return splitted.slice(0, splitted.length - 1);\r\n        }\r\n        return [];\r\n    }\r\n\r\n    constructor() {\r\n        this.execute();\r\n    }\r\n\r\n    protected getBaseFileInstructions() {\r\n        let fileInstructions = [\r\n        ] as any[];\r\n\r\n        let lastDirectory = null as any;\r\n\r\n        if (CLI.worksPathIsRootProject()) {\r\n            fileInstructions.push({\r\n                name: 'src',\r\n                children: [\r\n                    {\r\n                        name: 'app',\r\n                        children: [] as any[]\r\n                    }\r\n                ]\r\n            });\r\n            lastDirectory = fileInstructions[0].children[0];\r\n        }\r\n        else if (CLI.worksPathIsSourceDir()) {\r\n            fileInstructions.push({ name: 'app', children: [] as any[] });\r\n            lastDirectory = fileInstructions[0];\r\n        }\r\n\r\n        for(let dirName of this.directories) {\r\n            let dir = { name: dirName, children: [] };\r\n\r\n            if (lastDirectory)\r\n                lastDirectory.children.push(dir);\r\n            else\r\n                fileInstructions.push(dir);\r\n\r\n            lastDirectory = dir;\r\n        }\r\n\r\n        return { fileInstructions, lastDirectory };\r\n    }\r\n\r\n    protected replaceVariablesInContentFile(content: string) {\r\n        let regex = /\\[\\[(.|\\n)*?\\]\\]/g;\r\n        if (regex.test(content)) {\r\n            content = content.replace(regex, (name) => {\r\n                name = name.replace(/(^\\[\\[)|(\\]\\]$)/g, '');\r\n                if (name !== '')\r\n                    return this.getValueByName(name);\r\n\r\n                return '';\r\n            });\r\n        }\r\n\r\n        return content;\r\n    }\r\n\r\n    abstract async execute(): Promise<void>;\r\n    abstract question(): Promise<QuestionAnswer>;\r\n    abstract isValid(fileName: string): boolean;\r\n    abstract getValueByName(fname: string): string;\r\n}"]}