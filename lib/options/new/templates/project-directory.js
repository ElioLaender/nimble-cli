"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PACKAGE_JSON = "{\n    \"name\": \"[[ProjectName]]\",\n    \"version\": \"1.0.0\",\n    \"scripts\": {\n        \"start\": \"npm run serve:local\",\n        \"build\": \"npm run build:prod\",\n        \"serve:local\": \"webpack-dev-server --env=local --devtool source-map\",\n        \"serve:dev\": \"webpack-dev-server --env=dev --devtool source-map\",\n        \"build:prod\": \"webpack --env=prod\",\n        \"build:dev\": \"webpack --env=dev\",\n        \"initialize\": \"npm i webpack webpack-cli webpack-dev-server -g && npm i --save-dev && npm rebuild node-sass\"\n    },\n    \"private\": true,\n    \"dependencies\": {\n        \"@nimble-ts/core\": \"^[[NimbleVersion]]\"\n    },\n    \"devDependencies\": {\n        \"@types/node\": \"^12.12.7\",\n        \"@types/webpack-env\": \"^1.14.1\",\n        \"clean-webpack-plugin\": \"^2.0.1\",\n        \"copy-webpack-plugin\": \"^5.0.2\",\n        \"css-loader\": \"^2.1.1\",\n        \"file-loader\": \"^3.0.1\",\n        \"html-loader\": \"^0.5.5\",\n        \"html-webpack-plugin\": \"^3.2.0\",\n        \"mini-css-extract-plugin\": \"^0.8.0\",\n        \"node-sass\": \"^4.11.0\",\n        \"postcss-loader\": \"^3.0.0\",\n        \"prerender-spa-plugin\": \"^3.4.0\",\n        \"sass-loader\": \"^7.1.0\",\n        \"style-loader\": \"^0.23.1\",\n        \"ts-loader\": \"^5.4.5\",\n        \"typescript\": \"^3.7.3\",\n        \"typescript-require\": \"^0.2.10\",\n        \"webpack\": \"^4.28.1\",\n        \"webpack-cli\": \"^3.2.1\",\n        \"webpack-dev-server\": \"^3.1.14\"\n    }\n}\n";
exports.README = "# Nimble Application\nThis is a Nimble project application.";
exports.TSCONFIG = "{\n    \"compileOnSave\": false,\n    \"compilerOptions\": {\n        \"allowJs\": true,\n        \"module\": \"esnext\",\n        \"target\": \"es5\",\n        \"sourceMap\": true,\n        \"baseUrl\": \"./\",\n        \"outDir\": \"./dist/\",\n        \"downlevelIteration\": true,\n        \"emitDecoratorMetadata\": true,\n        \"experimentalDecorators\": true,\n        \"declaration\": false,\n        \"esModuleInterop\": true,\n        \"allowSyntheticDefaultImports\": true,\n        \"moduleResolution\": \"node\",\n        \"typeRoots\": [\n            \"node_modules/@types\"\n        ],\n        \"lib\": [\n            \"es2017\",\n            \"dom\"\n        ],\n        \"paths\": {\n            \"src/*\": [\"./src/*\"]\n        }\n    },\n    \"include\": [\n        \"./src/**/*\"\n    ]\n}";
exports.GITIGNORE = "dist\n\n.DS_Store\n\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules\n/node_modules/\njspm_packages\n\n# TypeScript v1 declaration files\ntypings/\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n\n# next.js build output\n.next\n";
//# sourceMappingURL=project-directory.js.map