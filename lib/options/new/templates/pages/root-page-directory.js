"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ROOT_HTML = "<div  class=\"root-page\">\n\t<header>\n\t\t<img src=\"/assets/img/logo.svg#white\"/>\n\t\t<ul>\n\t\t\t<li @for=\"let item of menuItems\" [class]=\"{ 'actived': routePath === item.path }\">\n\t\t\t\t<a href=\"/{{item.path}}\">{{item.text}}</a>\n\t\t\t</li>\n\t\t</ul>\n\t</header>\n\n\t<nimble-router class=\"root-content\"></nimble-router>\n\n\t<div @if=\"loading\" class=\"root-loaing\">Loading page...</div>\n\n\t<div class=\"root-alert\">\n\t\t\u26A0\uFE0F This sample Nimble project does not contain any third party code or script, everything was done using native resources of HTML and of framework itself.\n\t</div>\n</div>";
exports.ROOT_SCSS = "@import 'src/scss/variables';\n\n.root-page {\n\tbackground: linear-gradient(to bottom, darken($primaryColor, 15) 10%, $primaryColor 85%, lighten($primaryColor, 5) 100%);\n\twidth: 100%;\n\theight: 100%;\n    \n    > header {\n\t\twidth: 100%;\n\t\tpadding: 25px;\n\t\ttext-align: center;\n\n\t\t> img {\n\t\t\twidth: auto;\n\t\t\theight: 66px;\n\t\t\tpadding: 15px 0 25px 0;\n            animation: root-logo-beating 1.5s ease-in-out infinite;\n\t\t}\n\n        > ul {\n            display: table;\n            margin: 0 auto;\n\t\t\tpadding: 0;\n\t\t\tborder-radius: 24px;\n\t\t\tbox-shadow: 1px 1px 5px rgba(#000, .25);\n\n            > li {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tbackground: #FFF;\n\n                > a {\n                    font-size: 15px;\n                    text-decoration: none;\n                    color: #888;\n                    display: block;\n\t\t\t\t\tpadding: 15px 15px;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&:first-child {\n\t\t\t\t\t> a {\n\t\t\t\t\t\tpadding-left: 20px;\n\t\t\t\t\t}\n\t\t\t\t\tborder-radius: 24px 0 0 24px;\n\t\t\t\t}\n\n\t\t\t\t&:last-child {\n\t\t\t\t\t> a {\n\t\t\t\t\t\tpadding-right: 20px;\n\t\t\t\t\t}\n\t\t\t\t\tborder-radius: 0 24px 24px 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&:not(:last-child) {\n\t\t\t\t\tborder-right: 1px solid rgba($primaryColor, .15);\n\t\t\t\t}\n\n                &:not(.actived):hover {\n                    background: #FAFAFA;\n\n                    > a {\n                        color: $primaryColor;\n                    }\n                }\n\n                &.actived {\n                    background: #FAFAFA;\n\n                    > a {\n                        color: $primaryColor;\n                    }\n                }\n            }\n        }\n\t}\n\t\n\t.root-alert {\n\t\ttext-align: center;\n\t\tfont-size: 11px;\n\t\tdisplay: block;\n\t\tmargin: auto;\n\t\tmax-width: 500px;\n\t\tborder-top: 1px dashed rgba(#FFF, 0.2);\n\t\tmargin-top: 10px;\n\t\tpadding-top: 20px;\n\t\tcolor: #FFF;\n\t}\n\n    .root-content {\n        display: block;\n\t\tpadding: 15px;\n\t\tcolor: #FFF;\n\t}\n\t\n\t.root-loaing {\n\t\ttext-align: center;\n\t\tcolor: #FFF;\n\t}\n}\n\n@keyframes root-logo-beating {\n\t0% {\n\t\ttransform: translateY(0);\n\t}\n\t25% {\n\t\ttransform: translateY(2px);\n\t}\n\t50% {\n\t\ttransform: translateY(0);\n\t}\n\t75% {\n\t\ttransform: translateY(-2px);\n\t}\n\t100% {\n\t\ttransform: translateY(0);\n\t}\n}";
exports.ROOT_TS = "import { Page, PreparePage, Router } from '@nimble-ts/core';\n\n@PreparePage({\n    template: require('./root.page.html'),\n    style: require('./root.page.scss')\n})\nexport class RootPage extends Page {\n    public get routePath() { return Router.currentPath; }\n\n    public loading = false;\n    public menuItems = [\n        { text: 'First page', path: '' },\n        { text: 'Second page', path: 'second' },\n        { text: 'Third page', path: 'third' },\n    ];\n\n    private cancelListeners: (() => void)[] = [];\n\n    onInit() {\n        this.cancelListeners = [\n            Router.addListener('STARTED_CHANGE', () => {\n                this.render(() => this.loading = true);\n            }),\n            Router.addListener(['FINISHED_CHANGE', 'CHANGE_REJECTED', 'CHANGE_ERROR'], () => {\n\t\t\t\tthis.render(() => this.loading = false);\n            })\n        ]\n\t}\n\n    onDestroy() {\n        this.cancelListeners.forEach(unlistener => {\n\t\t\tunlistener();\n\t\t});\n    }\n}";
//# sourceMappingURL=root-page-directory.js.map