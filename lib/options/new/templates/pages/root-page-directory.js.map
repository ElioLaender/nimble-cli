{"version":3,"file":"root-page-directory.js","sourceRoot":"","sources":["../../../../../src/options/new/templates/pages/root-page-directory.ts"],"names":[],"mappings":";;AAAa,QAAA,SAAS,GACtB,wnBAiBO,CAAC;AAEK,QAAA,SAAS,GACtB,g6EAoHE,CAAC;AAEU,QAAA,OAAO,GACpB,y+BAkCE,CAAC","sourcesContent":["export const ROOT_HTML = \r\n`<div  class=\"root-page\">\r\n\t<header>\r\n\t\t<img src=\"/assets/img/logo_white.png\"/>\r\n\t\t<ul>\r\n\t\t\t<li @for=\"let item of menuItems\" [class]=\"{ 'actived': routePath === item.path }\">\r\n\t\t\t\t<a href=\"/{{item.path}}\">{{item.text}}</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t</header>\r\n\r\n\t<nimble-router class=\"root-content\"></nimble-router>\r\n\r\n\t<div @if=\"loading\" class=\"root-loaing\">Loading page...</div>\r\n\r\n\t<div class=\"root-alert\">\r\n\t\t⚠️ This sample Nimble project does not contain any third party code or script, everything was done using native resources of HTML and of framework itself.\r\n\t</div>\r\n</div>`;\r\n\r\nexport const ROOT_SCSS = \r\n`@import 'src/scss/variables';\r\n\r\n.root-page {\r\n\tbackground: linear-gradient(to bottom, darken($primaryColor, 15) 10%, $primaryColor 85%, lighten($primaryColor, 5) 100%);\r\n\twidth: 100%;\r\n\theight: 100%;\r\n    \r\n    > header {\r\n\t\twidth: 100%;\r\n\t\tpadding: 25px;\r\n\t\ttext-align: center;\r\n\r\n\t\t> img {\r\n\t\t\twidth: auto;\r\n\t\t\theight: 66px;\r\n\t\t\tpadding: 15px 0 25px 0;\r\n            animation: root-logo-beating 1.5s ease-in-out infinite;\r\n\t\t}\r\n\r\n        > ul {\r\n            display: table;\r\n            margin: 0 auto;\r\n\t\t\tpadding: 0;\r\n\t\t\tborder-radius: 24px;\r\n\t\t\tbox-shadow: 1px 1px 5px rgba(#000, .25);\r\n\r\n            > li {\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\tvertical-align: middle;\r\n\t\t\t\tbackground: #FFF;\r\n\r\n                > a {\r\n                    font-size: 15px;\r\n                    text-decoration: none;\r\n                    color: #888;\r\n                    display: block;\r\n\t\t\t\t\tpadding: 15px 15px;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t&:first-child {\r\n\t\t\t\t\t> a {\r\n\t\t\t\t\t\tpadding-left: 20px;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tborder-radius: 24px 0 0 24px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t&:last-child {\r\n\t\t\t\t\t> a {\r\n\t\t\t\t\t\tpadding-right: 20px;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tborder-radius: 0 24px 24px 0;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t&:not(:last-child) {\r\n\t\t\t\t\tborder-right: 1px solid rgba($primaryColor, .15);\r\n\t\t\t\t}\r\n\r\n                &:not(.actived):hover {\r\n                    background: #FAFAFA;\r\n\r\n                    > a {\r\n                        color: $primaryColor;\r\n                    }\r\n                }\r\n\r\n                &.actived {\r\n                    background: #FAFAFA;\r\n\r\n                    > a {\r\n                        color: $primaryColor;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\t}\r\n\t\r\n\t.root-alert {\r\n\t\ttext-align: center;\r\n\t\tfont-size: 11px;\r\n\t\tdisplay: block;\r\n\t\tmargin: auto;\r\n\t\tmax-width: 500px;\r\n\t\tborder-top: 1px dashed rgba(#FFF, 0.2);\r\n\t\tmargin-top: 10px;\r\n\t\tpadding-top: 20px;\r\n\t\tcolor: #FFF;\r\n\t}\r\n\r\n    .root-content {\r\n        display: block;\r\n\t\tpadding: 15px;\r\n\t\tcolor: #FFF;\r\n\t}\r\n\t\r\n\t.root-loaing {\r\n\t\ttext-align: center;\r\n\t\tcolor: #FFF;\r\n\t}\r\n}\r\n\r\n@keyframes root-logo-beating {\r\n\t0% {\r\n\t\ttransform: translateY(0);\r\n\t}\r\n\t25% {\r\n\t\ttransform: translateY(2px);\r\n\t}\r\n\t50% {\r\n\t\ttransform: translateY(0);\r\n\t}\r\n\t75% {\r\n\t\ttransform: translateY(-2px);\r\n\t}\r\n\t100% {\r\n\t\ttransform: translateY(0);\r\n\t}\r\n}`;\r\n\r\nexport const ROOT_TS = \r\n`import { Page, PreparePage, Router } from '@nimble-ts/core';\r\n\r\n@PreparePage({\r\n    template: require('./root.page.html'),\r\n    style: require('./root.page.scss')\r\n})\r\nexport class RootPage extends Page {\r\n    public get routePath() { return Router.currentPath; }\r\n\r\n    public loading = false;\r\n    public menuItems = [\r\n        { text: 'First page', path: '' },\r\n        { text: 'Second page', path: 'second' },\r\n        { text: 'Third page', path: 'third' },\r\n    ];\r\n\r\n    private cancelListeners: (() => void)[] = [];\r\n\r\n    onInit() {\r\n        this.cancelListeners = [\r\n            Router.addListener('STARTED_CHANGE', () => {\r\n                this.render(() => this.loading = true);\r\n            }),\r\n            Router.addListener(['FINISHED_CHANGE', 'CHANGE_REJECTED', 'CHANGE_ERROR'], () => {\r\n\t\t\t\tthis.render(() => this.loading = false);\r\n            })\r\n        ]\r\n\t}\r\n\r\n    onDestroy() {\r\n        this.cancelListeners.forEach(unlistener => {\r\n\t\t\tunlistener();\r\n\t\t});\r\n    }\r\n}`;"]}