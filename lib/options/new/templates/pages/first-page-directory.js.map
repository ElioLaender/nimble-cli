{"version":3,"file":"first-page-directory.js","sourceRoot":"","sources":["../../../../../src/options/new/templates/pages/first-page-directory.ts"],"names":[],"mappings":";;AAAa,QAAA,UAAU,GACvB,iaAiBO,CAAC;AAEK,QAAA,UAAU,GACvB,83BA8CE,CAAC;AAEU,QAAA,QAAQ,GACrB,wiBAyBE,CAAC","sourcesContent":["export const FIRST_HTML = \n`<div  class=\"first-page\">\n\t<span>ðŸ˜Ž</span><br>\n\t<div>\n\t\tWellcome to <strong>Nimble framework</strong>\n\t</div>\n\n\t<p>\n\t\tLook what to do:\n\t</p>\n\n\t<div class=\"page-example\">\n\t\t<button (click)=\"decrease()\">-</button>\n\t\t<button (click)=\"increase()\">+</button>\n\t\t<div class=\"line-bar\">\n\t\t\t<div [style]=\"{ 'width': (width + '%') }\"></div>\n\t\t</div>\n\t</div>\n</div>`;\n\nexport const FIRST_SCSS = \n`@import 'src/scss/variables';\n\n.first-page {\n    padding: 15px;\n    text-align: center;\n\n    > span  {\n        font-size: 50px;\n\t}\n\t\n\t.page-example {\n\t\tpadding-top: 10px;\n\t\tmax-width: 300px;\n\t\tmargin: auto;\n\n\t\t> button {\n\t\t\toutline: 0;\n\t\t\tmargin: 0 5px;\n\t\t\tcursor: pointer;\n\t\t\tbackground: transparent;\n\t\t\tborder-radius: 50%;\n\t\t\twidth: 35px;\n\t\t\theight: 35px;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: bold;\n\t\t\tborder: 3px solid #FFF;\n\t\t\tcolor: #FFF;\n\t\t}\n\n\t\t.line-bar {\n\t\t\tposition: relative;\n\t\t\theight: 30px;\n\t\t\tmargin: 20px auto 0 auto;\n\t\t\tborder-radius: 6px;\n\t\t\tborder: 2px solid #FFF;\n\t\t\toverflow: hidden;\n\n\t\t\t> div {\n\t\t\t\tposition: absolute;\n\t\t\t\theight: 100%;\n\t\t\t\tbackground: #FFF;\n\t\t\t\ttransition-duration: 200ms;\n\t\t\t\ttransition-delay: 50ms;\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nexport const FIRST_TS = \n`import { Page, PreparePage } from '@nimble-ts/core';\n\n@PreparePage({\n    template: require('./first.page.html'),\n    style: require('./first.page.scss'),\n    title: 'Nimble - First Page'\n})\nexport class FirstPage extends Page {\n\n\tpublic width: number = 10;\n\n    constructor() {\n        super();\n\t}\n\t\n\tpublic increase() {\n\t\tthis.render(() => {\n\t\t\tthis.width  = Math.min((this.width + 10), 100);\n\t\t});\n\t}\n\tpublic decrease() {\n\t\tthis.render(() => {\n\t\t\tthis.width = Math.max((this.width - 15), 0);\n\t\t});\n\t}\n}`;"]}