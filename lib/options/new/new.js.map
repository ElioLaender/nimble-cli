{"version":3,"file":"new.js","sourceRoot":"","sources":["../../../src/options/new/new.ts"],"names":[],"mappings":"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","sourcesContent":["const spawn = require('cross-spawn');\r\nimport inquirer = require('inquirer');\r\nimport * as cp from 'child_process';\r\nimport { inject, injectable } from 'inversify';\r\nimport { QuestionAnswer } from '../../core/question-answer.model';\r\nimport { Logger } from '../../utils/logger.util';\r\nimport { FileCreator } from '../../core/file-creator/file-creator';\r\n\r\nimport { INDEX_HTML } from './templates/public-directory';\r\nimport { NIMBLE_JSON, GITIGNORE, PACKAGE_JSON, README, TSCONFIG } from './templates/project-directory';\r\nimport { CLI } from '../../cli';\r\nimport { STYLE_SCSS, MAIN_TS } from './templates/src-directory';\r\nimport { RESET_SCSS, VARIABLES_SCSS } from './templates/scss-directory';\r\nimport { DEV_ENV, LOCAL_ENV, PROD_ENV } from './templates/environments-directory';\r\nimport { ROUTES_TS } from './templates/app-directory';\r\nimport { ROOT_HTML, ROOT_SCSS, ROOT_TS } from './templates/pages/root-page-directory';\r\nimport { FIRST_HTML, FIRST_SCSS, FIRST_TS } from './templates/pages/first-page-directory';\r\nimport { SECOND_HTML, SECOND_SCSS, SECOND_TS } from './templates/pages/second-page-directory';\r\nimport { THIRD_HTML, THIRD_SCSS, THIRD_TS } from './templates/pages/third-page-directory';\r\nimport { Readable } from 'stream';\r\n\r\n@injectable()\r\nexport class New {\r\n    private projectName!: string;\r\n\r\n    private get projectFriendlyName() {\r\n        let name = this.projectName;\r\n\r\n        if (name.includes('-'))\r\n            name = name.split('-').map((part) => part.charAt(0).toUpperCase() + part.slice(1)).join('');\r\n\r\n        if (name.includes('_'))\r\n            name = name.split('_').map((part) => part.charAt(0).toUpperCase() + part.slice(1)).join('');\r\n\r\n        name = name[0].toUpperCase() + name.substr(1);\r\n        \r\n        return name;\r\n    }\r\n\r\n    constructor(\r\n        @inject('Logger') private logger: Logger\r\n    ) {\r\n        if (CLI.isNimbleProject()) {\r\n            this.logger.showWarn('⚠️ Looks like you\\'re already on a Nimble project.');\r\n            process.exit(0);\r\n        }\r\n\r\n        this.execute();\r\n    }\r\n\r\n    private async execute() {\r\n        let answer: QuestionAnswer = await this.question();\r\n\r\n        let projectName = answer.value.trim().toLowerCase();\r\n\r\n        if (this.isValid(projectName)) {\r\n            this.projectName = projectName;\r\n            this.startCreateProject();\r\n        }\r\n        else\r\n            this.execute();\r\n    }\r\n\r\n    private question(): Promise<QuestionAnswer> {\r\n        return inquirer.prompt([{ \r\n            name: 'value',\r\n            type: 'input',\r\n            message: 'What is name of the your project? (ex.: my-project)',\r\n        }]);\r\n    };\r\n\r\n    private isValid(projectName: string): boolean {\r\n        if(projectName === '') {\r\n            this.logger.showError('The name cannot be empty.');\r\n            return false;\r\n        }\r\n        if(projectName.includes(' ')) {\r\n            this.logger.showError('The name cannot constains whitespace.');\r\n            return false;\r\n        }\r\n        if(/[!$%^&*()+|~=`{}\\[\\]:\";'<>?,.\\/]/.test(projectName)) {\r\n            this.logger.showError('The name cannot have the following symbols: !$%^&*()+|~=`{}\\[\\]:\";\\'<>?,.\\/');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private async startCreateProject() {\r\n        let creator = new FileCreator();\r\n        creator.initialize([\r\n            {\r\n                name: this.projectName,\r\n                children: [\r\n                    {\r\n                        name: 'public',\r\n                        children: [\r\n                            { name: 'index.html', content: this.replaceVariablesInContentFile(INDEX_HTML) },\r\n                            { name: 'favicon.ico', from: __dirname + '/templates/files/favicon.ico' },\r\n                            {\r\n                                name: 'assets',\r\n                                children: [\r\n\t\t\t\t\t\t\t\t\t{ name: 'css' },\r\n\t\t\t\t\t\t\t\t\t{ name: 'fonts' },\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tname: 'img',\r\n\t\t\t\t\t\t\t\t\t\tchildren: [\r\n\t\t\t\t\t\t\t\t\t\t\t{ name: 'logo_white.png', from: __dirname + '/templates/files/logo_white.png'  }\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{ name: 'js' }\r\n\t\t\t\t\t\t\t\t]\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'src',\r\n                        children: [\r\n                            {\r\n                                name: 'app',\r\n                                children: [\r\n                                    { name: 'routes.ts', content: this.replaceVariablesInContentFile(ROUTES_TS) },\r\n                                    {\r\n                                        name: 'pages',\r\n                                        children: [\r\n                                            {\r\n                                                name: 'root',\r\n                                                children: [\r\n                                                    { name: 'root.page.html', content: this.replaceVariablesInContentFile(ROOT_HTML) },\r\n                                                    { name: 'root.page.scss', content: this.replaceVariablesInContentFile(ROOT_SCSS) },\r\n                                                    { name: 'root.page.ts', content: this.replaceVariablesInContentFile(ROOT_TS) },\r\n                                                ]\r\n                                            },\r\n                                            {\r\n                                                name: 'first',\r\n                                                children: [\r\n                                                    { name: 'first.page.html', content: this.replaceVariablesInContentFile(FIRST_HTML) },\r\n                                                    { name: 'first.page.scss', content: this.replaceVariablesInContentFile(FIRST_SCSS) },\r\n                                                    { name: 'first.page.ts', content: this.replaceVariablesInContentFile(FIRST_TS) },\r\n                                                ]\r\n                                            },\r\n                                            {\r\n                                                name: 'second',\r\n                                                children: [\r\n                                                    { name: 'second.page.html', content: this.replaceVariablesInContentFile(SECOND_HTML) },\r\n                                                    { name: 'second.page.scss', content: this.replaceVariablesInContentFile(SECOND_SCSS) },\r\n                                                    { name: 'second.page.ts', content: this.replaceVariablesInContentFile(SECOND_TS) },\r\n                                                ]\r\n                                            },\r\n                                            {\r\n                                                name: 'third',\r\n                                                children: [\r\n                                                    { name: 'third.page.html', content: this.replaceVariablesInContentFile(THIRD_HTML) },\r\n                                                    { name: 'third.page.scss', content: this.replaceVariablesInContentFile(THIRD_SCSS) },\r\n                                                    { name: 'third.page.ts', content: this.replaceVariablesInContentFile(THIRD_TS) },\r\n                                                ]\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                name: 'scss',\r\n                                children: [\r\n                                    { name: 'reset.scss', content: this.replaceVariablesInContentFile(RESET_SCSS) },\r\n                                    { name: 'variables.scss', content: this.replaceVariablesInContentFile(VARIABLES_SCSS) },\r\n                                ]\r\n                            },\r\n                            {\r\n                                name: 'environments',\r\n                                children: [\r\n                                    { name: 'env.local.js', content: this.replaceVariablesInContentFile(LOCAL_ENV) },\r\n                                    { name: 'env.dev.js', content: this.replaceVariablesInContentFile(DEV_ENV) },\r\n                                    { name: 'env.prod.js', content: this.replaceVariablesInContentFile(PROD_ENV) },\r\n                                ]\r\n                            },\r\n                            { name: 'style.scss', content: this.replaceVariablesInContentFile(STYLE_SCSS) },\r\n                            { name: 'main.ts', content: this.replaceVariablesInContentFile(MAIN_TS) },\r\n                        ]\r\n                    },\r\n                    { name: '.gitignore', content: this.replaceVariablesInContentFile(GITIGNORE) },\r\n                    { name: 'nimble.json', content: this.replaceVariablesInContentFile(NIMBLE_JSON) },\r\n                    { name: 'package.json', content: this.replaceVariablesInContentFile(PACKAGE_JSON) },\r\n                    { name: 'README.md', content: this.replaceVariablesInContentFile(README) },\r\n                    { name: 'tsconfig.json', content: this.replaceVariablesInContentFile(TSCONFIG) }\r\n                ]\r\n            }\r\n        ]);\r\n        await creator.startCreateFiles((response) => {\r\n            if (!response.error) {\r\n                this.logger.showCreated(response.fileInstruction.completePath());\r\n            }\r\n            else {\r\n                this.logger.showError(response.error);\r\n            }\r\n        });\r\n\r\n        this.logger.breakLine();\r\n        this.logger.showInfo('Installing dependencies...');\r\n\r\n        let errorsMsg: string[] = [];\r\n        let childProcess = cp.exec(`npm install --colors`, { cwd: this.projectName });\r\n\r\n        (childProcess.stdout as Readable).on('data', (data) => {\r\n            console.log(data);\r\n        });\r\n        (childProcess.stderr as Readable).on('data', (data) => {\r\n            console.log(data);\r\n            if (data) errorsMsg.push(data.toString());\r\n        });\r\n\r\n        childProcess.addListener('close', (code) => {\r\n            if (!code)\r\n                this.logger.showSuccess('Finished! Your project has been created!');\r\n            else if (errorsMsg.some(x => x.includes('permission')))\r\n                this.logger.showSuccess('Finished! Your project has been created, but we had some permissions problems, see above. Maybe you need run \"npm run initialize\" inside project folder with administrator privileges.');\r\n            else\r\n                this.logger.showSuccess('Finished! Your project has been created, but we had some problems, see above.');\r\n        });\r\n    }\r\n\r\n    private replaceVariablesInContentFile(content: string) {\r\n        let regex = /\\[\\[(.|\\n)*?\\]\\]/g;\r\n        if (regex.test(content)) {\r\n            content = content.replace(regex, (name) => {\r\n                name = name.replace(/(^\\[\\[)|(\\]\\]$)/g, '');\r\n                if (name !== '')\r\n                    return this.getValueByName(name);\r\n\r\n                return '';\r\n            });\r\n        }\r\n\r\n        return content;\r\n    }\r\n\r\n    private getValueByName(name: string){\r\n        switch(name) {\r\n            case 'ProjectName':\r\n                return this.projectName;\r\n            case 'ProjectFriendlyName':\r\n                return this.projectFriendlyName;\r\n            case 'Version':\r\n                return CLI.version;\r\n            case 'NimbleVersion':\r\n                return CLI.nimbleVersion;\r\n        }\r\n        return '';\r\n    }\r\n}"]}