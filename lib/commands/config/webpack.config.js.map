{"version":3,"file":"webpack.config.js","sourceRoot":"","sources":["../../../src/commands/config/webpack.config.ts"],"names":[],"mappings":"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","sourcesContent":["import path from 'path';\nimport webpack from 'webpack';\nimport CleanWebpackPlugin from 'clean-webpack-plugin';\nimport HtmlWebpackPlugin from 'html-webpack-plugin';\nimport CopyPlugin from 'copy-webpack-plugin';\nimport PrerenderSpaPlugin from 'prerender-spa-plugin';\n\nlet configuration: any = {};\ntry { configuration = require(process.cwd() + '/src/configuration.json'); }\ncatch{ configuration = {}; }\n\nconst Renderer = PrerenderSpaPlugin.PuppeteerRenderer;\n\nconst distPath = path.resolve(process.cwd(), 'build');\n\nexport function webpackConfig(env: string, isProdMod: boolean = false) {\n    let enviroment = loadEnvFile(env);\n    let config = {\n        mode: isProdMod ? 'production' : 'development',\n        entry: getEntries(),\n        output: {\n            chunkFilename: '[name].[chunkhash].bundle.js',\n            filename: '[name].[chunkhash].bundle.js',\n            path: distPath,\n            publicPath: '/'\n        },\n        watch: !isProdMod,\n        watchOptions: { ignored: [`${process.cwd()}/node_modules`] },\n        plugins: getPlugins(isProdMod, enviroment),\n        module: {\n            rules: getRules(isProdMod, enviroment)\n        },\n        resolve: {\n            extensions: [\".tsx\", \".ts\", \".js\"],\n            alias: (function () {\n                const tsconfigPath = process.cwd() + '/tsconfig.json';\n                const { baseUrl, paths } = require(tsconfigPath).compilerOptions;\n                const pathPrefix = path.resolve(path.dirname(tsconfigPath), baseUrl);\n                const aliases = {} as any;\n\n                Object.keys(paths).forEach((item) => {\n                    const name = item.replace(\"/*\", \"\");\n                    const value = path.resolve(pathPrefix, paths[item][0].replace(\"/*\", \"\"));\n\n                    aliases[name] = value;\n                });\n\n                return aliases;\n            })(),\n        }\n    };\n\n    if (!isProdMod)\n        config['devtool'] = 'source-map';\n\n    return config;\n};\n\nfunction getEntries() {\n\n    let entry = { 'main': process.cwd() + '/src/index.ts' } as any;\n\n    if (configuration.vendors) {\n        if (configuration.vendors.js && configuration.vendors.js.length > 0)\n            entry['js.vendors'] = configuration.vendors.js.map((file: string) => {\n                return process.cwd() + (file.endsWith('/') ? '' : '/') + file;\n            });\n        if (configuration.vendors.css && configuration.vendors.css.length > 0)\n            entry['css.vendors'] = configuration.vendors.css.map((file: string) => {\n                return process.cwd() + (file.endsWith('/') ? '' : '/') + file;\n            });\n    }\n    return entry;\n}\n\nfunction getPlugins(isProdMod: boolean, enviroment: any) {\n    let plugins = [\n        new CleanWebpackPlugin(),\n        new HtmlWebpackPlugin({\n            template: process.cwd() + '/public/index.html',\n            filename: 'index.html',\n            hash: true,\n            minify: isProdMod ? {\n                removeComments: true,\n                collapseWhitespace: true,\n                removeRedundantAttributes: true,\n                useShortDoctype: true,\n                removeEmptyAttributes: true,\n                removeStyleLinkTypeAttributes: true,\n                keepClosingSlash: true,\n                minifyJS: true,\n                minifyCSS: true,\n                minifyURLs: true,\n              } : undefined\n        }),\n        new CopyPlugin([\n            { from: 'public', to: '.' },\n        ]),\n        new webpack.DefinePlugin({\n            'process.env': JSON.stringify(enviroment)\n        })\n    ];\n\n    let preRender = configuration['pre-render'];\n    if (isProdMod && preRender && preRender.enabled && preRender.routes && preRender.routes.length > 0) {\n        plugins.push(new PrerenderSpaPlugin({\n            staticDir: distPath,\n            routes: preRender.routes,\n            renderer: new Renderer({\n                renderAfterDocumentEvent: 'render-event'\n            }),\n            postProcess: function (renderedRoute: any) {\n                renderedRoute.html = renderedRoute.html.replace('<nimble-root', '<nimble-root style=\"visibility: hidden;\"');\n                renderedRoute.html = renderedRoute.html.replace(/<style type=\"text\\/css\">(.|\\n)*?<\\/style>/g, '');\n                return renderedRoute;\n            }\n        }));\n    }\n\n    return plugins;\n}\n\nfunction getRules(isProdMod: boolean, enviroment: any) {\n    let rules = [\n        {\n            test: /\\.(ts|js)x?$/,\n            exclude: /node_modules/,\n            loader: 'ts-loader'\n        },\n        {\n            test: /\\.css$/,\n            use: ['style-loader', 'css-loader']\n        },\n        {\n            test: /\\.scss$/,\n            use: [\n                'style-loader',\n                'css-loader',\n                'sass-loader',\n            ]\n        },\n        {\n            test: /\\.(svg|png|jpg)$/,\n            loader: 'file-loader',\n            options: {\n                name: '[name].[ext]',\n                outputhPath: 'assets/img/',\n                publicPath: 'assets/img/'\n            }\n        },\n        {\n            test: /\\.(ttf|woff|woff2)$/,\n            loader: 'file-loader',\n            options: {\n                name: '[name].[ext]',\n                outputhPath: 'assets/fonts/',\n                publicPath: 'assets/fonts/'\n            }\n        },\n        {\n            test: /\\.html$/,\n            use: 'html-loader'\n        }\n    ];\n\n    return rules;\n}\n\nfunction loadEnvFile(env: string) {\n    if (env) {\n        var enviroment = require(`${process.cwd()}/src/enviroments/env.${env}.js`);\n        if (enviroment) {\n            return enviroment;\n        }\n    }\n    return {\n        production: true\n    };\n}"]}