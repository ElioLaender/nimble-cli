{"version":3,"file":"webpack.config.js","sourceRoot":"","sources":["../../../src/commands/config/webpack.config.ts"],"names":[],"mappings":"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","sourcesContent":["import path from 'path';\nimport webpack from 'webpack';\nimport CleanWebpackPlugin from 'clean-webpack-plugin';\nimport HtmlWebpackPlugin from 'html-webpack-plugin';\nimport CopyPlugin from 'copy-webpack-plugin';\nimport PrerenderSpaPlugin from 'prerender-spa-plugin';\nimport MiniCssExtractPlugin from 'mini-css-extract-plugin';\n\nlet configuration: any = {};\ntry { configuration = require(process.cwd() + '/nimble.json'); }\ncatch{ configuration = {}; }\n\nconst Renderer = PrerenderSpaPlugin.PuppeteerRenderer;\n\nconst distPath = path.resolve(process.cwd(), 'build');\n\nexport async function webpackConfig(env: string, isProdMod: boolean = false) {\n    let enviroment = await loadEnvFile(env);\n    let config = {\n        mode: isProdMod ? 'production' : 'development',\n        entry: getEntries(),\n        output: {\n            chunkFilename: '[name].bundle.[chunkhash].js',\n            filename: '[name].bundle.[chunkhash].js',\n            path: distPath,\n            publicPath: '/'\n        },\n        watch: !isProdMod,\n        watchOptions: { ignored: [`${process.cwd()}/node_modules`] },\n        plugins: getPlugins(isProdMod, enviroment),\n        module: {\n            rules: getRules(isProdMod, enviroment)\n        },\n        resolve: {\n            extensions: ['.ts', '.js', '.scss'],\n            alias: (() => {\n                const tsconfigPath = process.cwd() + '/tsconfig.json';\n                const { baseUrl, paths } = require(tsconfigPath).compilerOptions;\n                const pathPrefix = path.resolve(path.dirname(tsconfigPath), baseUrl);\n                const aliases = {} as any;\n\n                Object.keys(paths).forEach((item) => {\n                    const name = item.replace('/*', '');\n                    const value = path.resolve(pathPrefix, paths[item][0].replace('/*', ''));\n\n                    aliases[name] = value;\n                });\n\n                return aliases;\n            })(),\n        }\n    };\n\n    if (!isProdMod)\n        config['devtool'] = 'source-map';\n\n    return config;\n};\n\nfunction getEntries() {\n\n    let entry = { 'main': process.cwd() + '/src/main.ts' } as any;\n\n    if (configuration.vendors) {\n        if (configuration.vendors.js && configuration.vendors.js.length > 0)\n            entry['js.vendors'] = configuration.vendors.js.map((file: string) => {\n                return process.cwd() + (file.endsWith('/') ? '' : '/') + file;\n            });\n        if (configuration.vendors.css && configuration.vendors.css.length > 0)\n            entry['css.vendors'] = configuration.vendors.css.map((file: string) => {\n                return process.cwd() + (file.endsWith('/') ? '' : '/') + file;\n            });\n    }\n    return entry;\n}\n\nfunction getPlugins(isProdMod: boolean, enviroment: any) {\n    let plugins = [\n        new CleanWebpackPlugin(),\n        new HtmlWebpackPlugin({\n            template: process.cwd() + '/public/index.html',\n            filename: 'index.html',\n            hash: true,\n            minify: isProdMod ? {\n                removeComments: true,\n                collapseWhitespace: true,\n                removeRedundantAttributes: true,\n                useShortDoctype: true,\n                removeEmptyAttributes: true,\n                removeStyleLinkTypeAttributes: true,\n                keepClosingSlash: true,\n                minifyJS: true,\n                minifyCSS: true,\n                minifyURLs: true,\n            } : undefined\n        }),\n        new CopyPlugin([\n            { from: 'public', to: '.' },\n        ]),\n        new MiniCssExtractPlugin({\n            filename: !isProdMod ? '[name].css' : '[name].bundle.[hash].css',\n            chunkFilename: !isProdMod ? '[id].css' : '[id].bundle.[hash].css'\n        }),\n        new webpack.DefinePlugin({\n            'process.env': JSON.stringify(enviroment)\n        })\n    ];\n\n    let preRender = configuration['pre-render'];\n    if (isProdMod && preRender && preRender.enabled && preRender.routes && preRender.routes.length > 0) {\n        let routes = (preRender.routes as string[]).map(x => !x.startsWith('/') ? `/${x}` : x);\n        plugins.push(new PrerenderSpaPlugin({\n            staticDir: distPath,\n            routes: routes,\n            renderer: new Renderer({\n                renderAfterDocumentEvent: 'render-event'\n            }),\n            postProcess: (renderedRoute: any) => {\n                renderedRoute.html = renderedRoute.html.replace('<nimble-root', '<nimble-root style=\"visibility: hidden;\"');\n                renderedRoute.html = renderedRoute.html.replace(/<style type=\"text\\/css\">(.|\\n)*?<\\/style>/g, '');\n                return renderedRoute;\n            }\n        }));\n    }\n\n    return plugins;\n}\n\nfunction getRules(isProdMod: boolean, enviroment: any) {\n    let rules = [\n        {\n            test: /\\.(ts|js)x?$/,\n            exclude: /node_modules/,\n            loader: 'ts-loader'\n        },\n        {\n            test: /\\.(sc|sa|c)ss$/,\n            exclude: /\\.module.(s(a|c)ss)$/,\n            loader: [\n                !isProdMod ? 'style-loader' : MiniCssExtractPlugin.loader,\n                'css-loader',\n                {\n                    loader: 'sass-loader',\n                    options: {\n                        sourceMap: !isProdMod\n                    }\n                }\n            ]\n        },\n        {\n            test: /\\.(svg|png|jpg)$/,\n            loader: 'file-loader',\n            options: {\n                name: '[name].[ext]',\n                outputhPath: 'assets/img/',\n                publicPath: 'assets/img/'\n            }\n        },\n        {\n            test: /\\.(ttf|woff|woff2)$/,\n            loader: 'file-loader',\n            options: {\n                name: '[name].[ext]',\n                outputhPath: 'assets/fonts/',\n                publicPath: 'assets/fonts/'\n            }\n        },\n        {\n            test: /\\.html$/,\n            use: 'html-loader'\n        }\n    ];\n\n    return rules;\n}\n\nasync function loadEnvFile(env: string) {\n    if (env) {\n        var enviroment = await import(`${process.cwd()}/src/environments/env.${env}.js`);\n        if (enviroment) {\n            return enviroment;\n        }\n    }\n    return {\n        production: true\n    };\n}"]}