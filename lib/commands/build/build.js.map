{"version":3,"file":"build.js","sourceRoot":"","sources":["../../../src/commands/build/build.ts"],"names":[],"mappings":"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","sourcesContent":["import webpack from 'webpack';\nimport path from 'path';\nimport chalk from 'chalk';\nimport { inject, injectable } from 'inversify';\nimport { Logger } from '../../utils/logger.util';\nimport { ArgsResolver } from '../../core/args-resolver';\nimport { webpackConfig } from '../config/webpack.config';\nimport { PATHS } from '../../core/dev-utils/paths';\nimport { webpackDevServerUtils } from '../../core/dev-utils/webpack-dev-server-utils';\nimport { CLI } from '../../cli';\n\n@injectable()\nexport class Build {\n    private args!: ArgsResolver;\n\n    private DEFAULT_ENV = 'prod';\n    private WARN_AFTER_BUNDLE_GZIP_SIZE = 512 * 1024;\n    private WARN_AFTER_CHUNK_GZIP_SIZE = 1024 * 1024;\n\n    private get env() { return this.args.getValue('env', this.DEFAULT_ENV) as string; }\n\n    constructor(\n        @inject('Logger') private logger: Logger\n    ) {\n    }\n\n    public async execute(args: string[]) {\n        if (!CLI.isNimbleProject()){\n            this.logger.showError('To continue you must be in a Nimble project.');\n            process.exit(0);\n        }\n        \n        this.args = new ArgsResolver(args);\n\n        const config = webpackConfig(this.env, true);\n\n        this.build(config)\n            .then(\n                ({ stats, warnings }) => {\n                    if (warnings.length) {\n                        console.log(chalk.yellow('Compiled with warnings.\\n'));\n                        console.log(warnings.join('\\n\\n'));\n                        console.log(\n                            '\\nSearch for the ' +\n                            chalk.underline(chalk.yellow('keywords')) +\n                            ' to learn more about each warning.'\n                        );\n                        console.log(\n                            'To ignore, add ' +\n                            chalk.cyan('// eslint-disable-next-line') +\n                            ' to the line before.\\n'\n                        );\n                    } else {\n                        console.log(chalk.green('Compiled successfully.\\n'));\n                    }\n                },\n                err => {\n                    if (err && err.message) {\n                        console.log('');\n                        console.log(err.message);\n                        console.log('');\n                    }\n\n                    const tscCompileOnError = process.env.TSC_COMPILE_ON_ERROR === 'true';\n                    \n                    if (tscCompileOnError) {\n                        console.log(\n                            chalk.yellow(\n                                'Compiled with the following type errors (you may want to check these before deploying your app):\\n'\n                            )\n                        );\n                        // printBuildError(err);\n                    } else {\n                        console.log(chalk.red('Failed to compile.\\n'));\n                        // printBuildError(err);\n                        process.exit(1);\n                    }\n                }\n            );\n    }\n\n    private build(config: any) {\n        if (process.env.NODE_PATH) {\n            console.log(\n                chalk.yellow(\n                    'Setting NODE_PATH to resolve modules absolutely has been deprecated in favor of setting baseUrl in jsconfig.json (or tsconfig.json if you are using TypeScript) and will be removed in a future major release of create-react-app.'\n                )\n            );\n            console.log();\n        }\n\n        console.log('Creating an optimized production build...');\n\n        const compiler = webpack(config);\n        return new Promise<{ stats: any, warnings: string[] }>((resolve, reject) => {\n            compiler.run((err, stats) => {\n                let messages;\n                if (err) {\n                    if (!err.message) {\n                        return reject(err);\n                    }\n\n                    let errMessage = err.message;\n\n                    if (Object.prototype.hasOwnProperty.call(err, 'postcssNode')) {\n                        errMessage +=\n                            '\\nCompileError: Begins at CSS selector ' +\n                            err['postcssNode'].selector;\n                    }\n\n                    messages = this.formatWebpackMessages({\n                        errors: [errMessage],\n                        warnings: [],\n                    });\n                } else {\n                    messages = this.formatWebpackMessages(\n                        stats.toJson({ all: false, warnings: true, errors: true })\n                    );\n                }\n                if (messages.errors.length) {\n                    if (messages.errors.length > 1) {\n                        messages.errors.length = 1;\n                    }\n                    return reject(new Error(messages.errors.join('\\n\\n')));\n                }\n                if (\n                    process.env.CI &&\n                    (typeof process.env.CI !== 'string' ||\n                        process.env.CI.toLowerCase() !== 'false') &&\n                    messages.warnings.length\n                ) {\n                    console.log(\n                        chalk.yellow(\n                            '\\nTreating warnings as errors because process.env.CI = true.\\n' +\n                            'Most CI servers set it automatically.\\n'\n                        )\n                    );\n                    return reject(new Error(messages.warnings.join('\\n\\n')));\n                }\n\n                return resolve({ stats, warnings: messages.warnings });\n            });\n        });\n    }\n\n    private formatWebpackMessages(json) {\n        const formattedErrors = json.errors.map((message) => {\n            return this.formatMessage(message);\n        });\n        const formattedWarnings = json.warnings.map((message) => {\n            return this.formatMessage(message);\n        });\n        const result = { errors: formattedErrors, warnings: formattedWarnings };\n        if (result.errors.some(this.isLikelyASyntaxError)) {\n            result.errors = result.errors.filter(this.isLikelyASyntaxError);\n        }\n        return result;\n    }\n\n    private isLikelyASyntaxError(message) {\n        return message.indexOf('Syntax error:') !== -1;\n    }\n\n    private formatMessage(message) {\n        let lines = message.split('\\n');\n        lines = lines.filter(line => !/Module [A-z ]+\\(from/.test(line));\n\n        lines = lines.map(line => {\n            const parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(\n                line\n            );\n            if (!parsingError) {\n                return line;\n            }\n            const [, errorLine, errorColumn, errorMessage] = parsingError;\n            return `${'Syntax error:'} ${errorMessage} (${errorLine}:${errorColumn})`;\n        });\n\n        message = lines.join('\\n');\n        message = message.replace(\n            /SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g,\n            `${'Syntax error:'} $3 ($1:$2)\\n`\n        );\n        message = message.replace(\n            /^.*export '(.+?)' was not found in '(.+?)'.*$/gm,\n            `Attempted import error: '$1' is not exported from '$2'.`\n        );\n        message = message.replace(\n            /^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\n            `Attempted import error: '$2' does not contain a default export (imported as '$1').`\n        );\n        message = message.replace(\n            /^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\n            `Attempted import error: '$1' is not exported from '$3' (imported as '$2').`\n        );\n        lines = message.split('\\n');\n\n        if (lines.length > 2 && lines[1].trim() === '') {\n            lines.splice(1, 1);\n        }\n        lines[0] = lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/, '$1');\n\n        if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {\n            lines = [\n                lines[0],\n                lines[1]\n                    .replace('Error: ', '')\n                    .replace('Module not found: Cannot find file:', 'Cannot find file:'),\n            ];\n        }\n\n        if (lines[1] && lines[1].match(/Cannot find module.+node-sass/)) {\n            lines[1] = 'To import Sass files, you first need to install node-sass.\\n';\n            lines[1] +=\n                'Run `npm install node-sass` or `yarn add node-sass` inside your workspace.';\n        }\n\n        lines[0] = chalk.inverse(lines[0]);\n\n        message = lines.join('\\n');\n        message = message.replace(\n            /^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm,\n            ''\n        );\n        message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, '');\n        lines = message.split('\\n');\n\n        // Remove duplicated newlines\n        lines = lines.filter(\n            (line, index, arr) =>\n                index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim()\n        );\n\n        message = lines.join('\\n');\n        return message.trim();\n    }\n}"]}