{"version":3,"file":"logger.util.js","sourceRoot":"","sources":["../../src/utils/logger.util.ts"],"names":[],"mappings":"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","sourcesContent":["import { red, green, cyan, yellow, bold } from 'kleur';\r\nimport * as figlet from 'figlet';\r\nimport * as semver from 'semver';\r\n\r\nimport { injectable } from 'inversify';\r\nimport { ConsoleMessage } from './console-message';\r\nimport { CLI } from '../cli';\r\n\r\n@injectable()\r\nexport class Logger {\r\n\tprivate newLine = '\\n';\r\n\r\n\tpublic breakLine() {\r\n\t\tconsole.log('');\r\n\t}\r\n\r\n\tpublic showVersion(): void {\r\n\t\tlet inLocalProject = CLI.workingInLocalProject();\r\n\t\tconsole.log(cyan(figlet.textSync(ConsoleMessage.TITLE, { horizontalLayout: 'full' })));\r\n\r\n\t\tif (inLocalProject && CLI.hasGlobalInstalled()) {\r\n\t\t\tlet version = CLI.version;\r\n\t\t\tlet globalVersion = CLI.globalVersion;\r\n\t\t\tif (semver.gt(globalVersion, version)) {\r\n\t\t\t\tconsole.info(yellow(`⚠️ Your global Nimble CLI version (${globalVersion}) is greater than your local version (${version}). The local Nimble CLI version is used.`));\r\n\t\t\t\tconsole.info('');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.info('Versions:');\r\n\t\tconsole.info(` • ${bold('Nimble CLI')}\\t -> ` + cyan(CLI.version) + yellow(` (Using ${inLocalProject ? 'local version of this project' : 'global'})`));\r\n\t\tconsole.info(` • ${bold('Node')}\\t\\t -> ` + cyan(process.versions.node));\r\n\t\tconsole.info(` • ${bold('OS')}\\t\\t -> ` + cyan(`${process.platform} ${process.arch}`));\r\n\t\tconsole.info('');\r\n\t}\r\n\r\n\tpublic showWarn(message: string | Error): void {\r\n\t\tconsole.warn(yellow(ConsoleMessage.WARN) + message);\r\n\t}\r\n\r\n\tpublic showError(message: string | Error): void {\r\n\t\tconsole.error(red(ConsoleMessage.ERROR) + message);\r\n\t}\r\n\r\n\tpublic showSuccess(message: string): void {\r\n\t\tconsole.log(green(ConsoleMessage.SUCCESS) + message + this.newLine);\r\n\t}\r\n\r\n\tpublic showInfo(message: string): void {\r\n\t\tconsole.info(cyan(ConsoleMessage.INFO) + message + this.newLine);\r\n\t}\r\n\r\n\tpublic showCreated(fileName: string): void {\r\n\t\tconsole.log(green(ConsoleMessage.CREATED) + `${fileName}`);\r\n\t}\r\n\r\n\tpublic showUpdate(fileName: string, filePath: string): void {\r\n\t\tfilePath\r\n\t\t\t? console.log(green(ConsoleMessage.UPDATED) + `${fileName} in ${filePath}`)\r\n\t\t\t: console.log(green(ConsoleMessage.UPDATED) + `${fileName}`);\r\n\t}\r\n}"]}