{"version":3,"file":"logger.util.js","sourceRoot":"","sources":["../../src/utils/logger.util.ts"],"names":[],"mappings":";;;AAAA,+BAAyC;AACzC,qDAAiC;AAEjC,uCAAuC;AACvC,qDAAmD;AACnD,8BAA6B;AAG7B;IAAA;QACY,YAAO,GAAG,IAAI,CAAC;IAiC3B,CAAC;IA/BU,0BAAS,GAAhB;QACI,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IAEM,4BAAW,GAAlB;QACI,OAAO,CAAC,GAAG,CAAC,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gCAAc,CAAC,KAAK,EAAE,EAAE,gBAAgB,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;QACvF,OAAO,CAAC,IAAI,CAAC,gCAAc,CAAC,KAAK,CAAC,CAAC;QACnC,OAAO,CAAC,IAAI,CAAC,WAAW,GAAG,YAAI,CAAC,SAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IAClD,CAAC;IAEM,0BAAS,GAAhB,UAAiB,OAAuB;QACpC,OAAO,CAAC,KAAK,CAAC,WAAG,CAAC,gCAAc,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,CAAC;IACvD,CAAC;IAEM,4BAAW,GAAlB,UAAmB,OAAe;QAC9B,OAAO,CAAC,GAAG,CAAC,aAAK,CAAC,gCAAc,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;IACxE,CAAC;IAEM,yBAAQ,GAAf,UAAgB,OAAe;QAC3B,OAAO,CAAC,IAAI,CAAC,YAAI,CAAC,gCAAc,CAAC,IAAI,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;IACrE,CAAC;IAEM,4BAAW,GAAlB,UAAmB,QAAgB;QAC/B,OAAO,CAAC,GAAG,CAAC,aAAK,CAAC,gCAAc,CAAC,OAAO,CAAC,IAAG,KAAG,QAAU,CAAA,CAAC,CAAC;IAC/D,CAAC;IAEM,2BAAU,GAAjB,UAAkB,QAAgB,EAAE,QAAgB;QAChD,QAAQ;YACR,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,aAAK,CAAC,gCAAc,CAAC,OAAO,CAAC,IAAM,QAAQ,YAAO,QAAU,CAAA,CAAC;YAC3E,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,aAAK,CAAC,gCAAc,CAAC,OAAO,CAAC,IAAG,KAAG,QAAU,CAAA,CAAC,CAAC;IACjE,CAAC;IAjCQ,MAAM;QADlB,sBAAU,EAAE;OACA,MAAM,CAkClB;IAAD,aAAC;CAAA,AAlCD,IAkCC;AAlCY,wBAAM","sourcesContent":["import { red, green, cyan } from 'kleur';\nimport * as figlet from 'figlet';\n\nimport { injectable } from 'inversify';\nimport { ConsoleMessage } from './console-message';\nimport { CLI } from '../cli';\n\n@injectable()\nexport class Logger {\n    private newLine = '\\n';\n\n    public breakLine() {\n        console.log('');\n    }\n\n    public showVersion(): void {\n        console.log(cyan(figlet.textSync(ConsoleMessage.TITLE, { horizontalLayout: 'full' })));\n        console.info(ConsoleMessage.ABOUT);\n        console.info('Version: ' + cyan(CLI.version));\n    }\n      \n    public showError(message: string | Error): void {\n        console.error(red(ConsoleMessage.ERROR) + message);\n    }\n      \n    public showSuccess(message: string): void {\n        console.log(green(ConsoleMessage.SUCCESS) + message + this.newLine);\n    }\n      \n    public showInfo(message: string): void {\n        console.info(cyan(ConsoleMessage.INFO) + message + this.newLine);\n    }\n      \n    public showCreated(fileName: string): void {\n        console.log(green(ConsoleMessage.CREATED) + `${fileName}`);\n    }\n      \n    public showUpdate(fileName: string, filePath: string): void {\n        filePath \n        ? console.log(green(ConsoleMessage.UPDATED) + `${fileName} in ${filePath}`) \n        : console.log(green(ConsoleMessage.UPDATED) + `${fileName}`);\n    }\n}"]}