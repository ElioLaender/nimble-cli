{"version":3,"file":"format-webpack-msgs.js","sourceRoot":"","sources":["../../../src/core/dev-utils/format-webpack-msgs.ts"],"names":[],"mappings":";;AAAA,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/B,IAAM,wBAAwB,GAAG,eAAe,CAAC;AAEjD,SAAS,oBAAoB,CAAC,OAAO;IACjC,OAAO,OAAO,CAAC,OAAO,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5D,CAAC;AAED,oCAAoC;AACpC,SAAS,aAAa,CAAC,OAAO;IAC1B,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAEhC,kDAAkD;IAClD,oEAAoE;IACpE,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAlC,CAAkC,CAAC,CAAC;IAEjE,4CAA4C;IAC5C,2CAA2C;IAC3C,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI;QAClB,IAAM,YAAY,GAAG,+CAA+C,CAAC,IAAI,CACrE,IAAI,CACP,CAAC;QACF,IAAI,CAAC,YAAY,EAAE;YACf,OAAO,IAAI,CAAC;SACf;QACQ,IAAA,2BAAS,EAAE,6BAAW,EAAE,8BAAY,CAAiB;QAC9D,OAAU,wBAAwB,SAAI,YAAY,UAAK,SAAS,SAAI,WAAW,MAAG,CAAC;IACvF,CAAC,CAAC,CAAC;IAEH,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,+CAA+C;IAC/C,OAAO,GAAG,OAAO,CAAC,OAAO,CACrB,0CAA0C,EACvC,wBAAwB,kBAAe,CAC7C,CAAC;IACF,yBAAyB;IACzB,OAAO,GAAG,OAAO,CAAC,OAAO,CACrB,iDAAiD,EACjD,yDAAyD,CAC5D,CAAC;IACF,OAAO,GAAG,OAAO,CAAC,OAAO,CACrB,2EAA2E,EAC3E,oFAAoF,CACvF,CAAC;IACF,OAAO,GAAG,OAAO,CAAC,OAAO,CACrB,yEAAyE,EACzE,4EAA4E,CAC/E,CAAC;IACF,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAE5B,yBAAyB;IACzB,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5C,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACtB;IACD,qBAAqB;IACrB,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IAExD,wEAAwE;IACxE,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE;QAC1D,KAAK,GAAG;YACJ,KAAK,CAAC,CAAC,CAAC;YACR,KAAK,CAAC,CAAC,CAAC;iBACH,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;iBACtB,OAAO,CAAC,qCAAqC,EAAE,mBAAmB,CAAC;SAC3E,CAAC;KACL;IAED,sEAAsE;IACtE,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,+BAA+B,CAAC,EAAE;QAC7D,KAAK,CAAC,CAAC,CAAC,GAAG,8DAA8D,CAAC;QAC1E,KAAK,CAAC,CAAC,CAAC;YACJ,4EAA4E,CAAC;KACpF;IAED,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAEnC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,qEAAqE;IACrE,qEAAqE;IACrE,gEAAgE;IAChE,yDAAyD;IACzD,OAAO,GAAG,OAAO,CAAC,OAAO,CACrB,gDAAgD,EAChD,EAAE,CACL,CAAC,CAAC,iBAAiB;IACpB,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,6BAA6B,EAAE,EAAE,CAAC,CAAC,CAAC,iBAAiB;IAC/E,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAE5B,6BAA6B;IAC7B,KAAK,GAAG,KAAK,CAAC,MAAM,CAChB,UAAC,IAAI,EAAE,KAAK,EAAE,GAAG;QACb,OAAA,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;IAA1E,CAA0E,CACjF,CAAC;IAEF,yBAAyB;IACzB,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,OAAO,OAAO,CAAC,IAAI,EAAE,CAAC;AAC1B,CAAC;AAED,SAAgB,qBAAqB,CAAC,IAAI;IACtC,IAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,OAAO;QACrD,OAAO,aAAa,CAAC,OAAO,CAAE,CAAC;IACnC,CAAC,CAAC,CAAC;IACH,IAAM,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,OAAO;QACzD,OAAO,aAAa,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IACH,IAAM,MAAM,GAAG,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC;IACxE,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE;QAC1C,kDAAkD;QAClD,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;KAC9D;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AAbD,sDAaC","sourcesContent":["const chalk = require('chalk');\r\nconst friendlySyntaxErrorLabel = 'Syntax error:';\r\n\r\nfunction isLikelyASyntaxError(message) {\r\n    return message.indexOf(friendlySyntaxErrorLabel) !== -1;\r\n}\r\n\r\n// Cleans up webpack error messages.\r\nfunction formatMessage(message) {\r\n    let lines = message.split('\\n');\r\n\r\n    // Strip Webpack-added headers off errors/warnings\r\n    // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\r\n    lines = lines.filter(line => !/Module [A-z ]+\\(from/.test(line));\r\n\r\n    // Transform parsing error into syntax error\r\n    // TODO: move this to our ESLint formatter?\r\n    lines = lines.map(line => {\r\n        const parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(\r\n            line\r\n        );\r\n        if (!parsingError) {\r\n            return line;\r\n        }\r\n        const [, errorLine, errorColumn, errorMessage] = parsingError;\r\n        return `${friendlySyntaxErrorLabel} ${errorMessage} (${errorLine}:${errorColumn})`;\r\n    });\r\n\r\n    message = lines.join('\\n');\r\n    // Smoosh syntax errors (commonly found in CSS)\r\n    message = message.replace(\r\n        /SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g,\r\n        `${friendlySyntaxErrorLabel} $3 ($1:$2)\\n`\r\n    );\r\n    // Clean up export errors\r\n    message = message.replace(\r\n        /^.*export '(.+?)' was not found in '(.+?)'.*$/gm,\r\n        `Attempted import error: '$1' is not exported from '$2'.`\r\n    );\r\n    message = message.replace(\r\n        /^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\r\n        `Attempted import error: '$2' does not contain a default export (imported as '$1').`\r\n    );\r\n    message = message.replace(\r\n        /^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\r\n        `Attempted import error: '$1' is not exported from '$3' (imported as '$2').`\r\n    );\r\n    lines = message.split('\\n');\r\n\r\n    // Remove leading newline\r\n    if (lines.length > 2 && lines[1].trim() === '') {\r\n        lines.splice(1, 1);\r\n    }\r\n    // Clean up file name\r\n    lines[0] = lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/, '$1');\r\n\r\n    // Cleans up verbose \"module not found\" messages for files and packages.\r\n    if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {\r\n        lines = [\r\n            lines[0],\r\n            lines[1]\r\n                .replace('Error: ', '')\r\n                .replace('Module not found: Cannot find file:', 'Cannot find file:'),\r\n        ];\r\n    }\r\n\r\n    // Add helpful message for users trying to use Sass for the first time\r\n    if (lines[1] && lines[1].match(/Cannot find module.+node-sass/)) {\r\n        lines[1] = 'To import Sass files, you first need to install node-sass.\\n';\r\n        lines[1] +=\r\n            'Run `npm install node-sass` or `yarn add node-sass` inside your workspace.';\r\n    }\r\n\r\n    lines[0] = chalk.inverse(lines[0]);\r\n\r\n    message = lines.join('\\n');\r\n    // Internal stacks are generally useless so we strip them... with the\r\n    // exception of stacks containing `webpack:` because they're normally\r\n    // from user code generated by Webpack. For more information see\r\n    // https://github.com/facebook/create-react-app/pull/1050\r\n    message = message.replace(\r\n        /^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm,\r\n        ''\r\n    ); // at ... ...:x:y\r\n    message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, ''); // at <anonymous>\r\n    lines = message.split('\\n');\r\n\r\n    // Remove duplicated newlines\r\n    lines = lines.filter(\r\n        (line, index, arr) =>\r\n            index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim()\r\n    );\r\n\r\n    // Reassemble the message\r\n    message = lines.join('\\n');\r\n    return message.trim();\r\n}\r\n\r\nexport function formatWebpackMessages(json) {\r\n    const formattedErrors = json.errors.map(function (message) {\r\n        return formatMessage(message,);\r\n    });\r\n    const formattedWarnings = json.warnings.map(function (message) {\r\n        return formatMessage(message);\r\n    });\r\n    const result = { errors: formattedErrors, warnings: formattedWarnings };\r\n    if (result.errors.some(isLikelyASyntaxError)) {\r\n        // If there are any syntax errors, show just them.\r\n        result.errors = result.errors.filter(isLikelyASyntaxError);\r\n    }\r\n    return result;\r\n}"]}