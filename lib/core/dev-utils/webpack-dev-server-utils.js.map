{"version":3,"file":"webpack-dev-server-utils.js","sourceRoot":"","sources":["../../../src/core/dev-utils/webpack-dev-server-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import address from 'address';\nimport url from 'url';\nimport chalk from 'chalk';\nimport { clearConsole } from '../../core/dev-utils/dev-various-utils';\nimport { formatWebpackMessages } from '../../core/dev-utils/format-webpack-msgs';\n/* import typescriptFormatter from './typescriptFormatter';\nimport forkTsCheckerWebpackPlugin from './ForkTsCheckerWebpackPlugin'; */\n\nconst isInteractive = process.stdout.isTTY;\n\nfunction prepareUrls(protocol, host, port) {\n    const formatUrl = hostname =>\n        url.format({\n            protocol,\n            hostname,\n            port,\n            pathname: '/',\n        });\n    const prettyPrintUrl = hostname =>\n        url.format({\n            protocol,\n            hostname,\n            port: chalk.bold(port),\n            pathname: '/',\n        });\n\n    const isUnspecifiedHost = host === '0.0.0.0' || host === '::';\n    let prettyHost, lanUrlForConfig, lanUrlForTerminal;\n    if (isUnspecifiedHost) {\n        prettyHost = 'localhost';\n        try {\n            lanUrlForConfig = address.ip();\n            if (lanUrlForConfig) {\n                if (\n                    /^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(\n                        lanUrlForConfig\n                    )\n                ) {\n                    lanUrlForTerminal = prettyPrintUrl(lanUrlForConfig);\n                } else {\n                    lanUrlForConfig = undefined;\n                }\n            }\n        } catch (_e) {\n            // ignored\n        }\n    } else {\n        prettyHost = host;\n    }\n    const localUrlForTerminal = prettyPrintUrl(prettyHost);\n    const localUrlForBrowser = formatUrl(prettyHost);\n    return {\n        lanUrlForConfig,\n        lanUrlForTerminal,\n        localUrlForTerminal,\n        localUrlForBrowser,\n    };\n}\n\nfunction printInstructions(appName, urls) {\n    console.log();\n    console.log(`You can now view ${chalk.bold(appName)} in the browser.`);\n    console.log();\n\n    if (urls.lanUrlForTerminal) {\n        console.log(\n            `  ${chalk.bold('Local:')}            ${urls.localUrlForTerminal}`\n        );\n        console.log(\n            `  ${chalk.bold('On Your Network:')}  ${urls.lanUrlForTerminal}`\n        );\n    } else {\n        console.log(`  ${urls.localUrlForTerminal}`);\n    }\n\n    console.log();\n    console.log('Note that the development build is not optimized.');\n    console.log(\n        `To create a production build, use ` +\n        `${chalk.cyan(`npm run build`)}.`\n    );\n    console.log();\n}\n\nfunction createCompiler({ appName, config, devSocket, urls, webpack }) {\n    // \"Compiler\" is a low-level interface to Webpack.\n    // It lets us listen to some events and provide our own custom messages.\n    let compiler;\n    try {\n        compiler = webpack(config);\n    } catch (err) {\n        console.log(chalk.red('Failed to compile.'));\n        console.log();\n        console.log(err.message || err);\n        console.log();\n        process.exit(1);\n    }\n\n    compiler.hooks.invalid.tap('invalid', () => {\n        if (isInteractive) {\n            clearConsole();\n        }\n        console.log('Compiling...');\n    });\n\n    let isFirstCompile = true;\n    let tsMessagesPromise;\n    let tsMessagesResolver;\n\n    compiler.hooks.beforeCompile.tap('beforeCompile', () => {\n        tsMessagesPromise = new Promise(resolve => {\n            tsMessagesResolver = msgs => resolve(msgs);\n        });\n    });\n\n    /* forkTsCheckerWebpackPlugin\n        .getCompilerHooks(compiler)\n        .receive.tap('afterTypeScriptCheck', (diagnostics, lints) => {\n            const allMsgs = [...diagnostics, ...lints];\n            const format = message =>\n                `${message.file}\\n${typescriptFormatter(message, true)}`;\n\n            tsMessagesResolver({\n                errors: allMsgs.filter(msg => msg.severity === 'error').map(format),\n                warnings: allMsgs\n                    .filter(msg => msg.severity === 'warning')\n                    .map(format),\n            });\n        }); */\n\n\n    compiler.hooks.done.tap('done', async stats => {\n        const statsData = stats.toJson({\n            all: false,\n            warnings: true,\n            errors: true,\n        });\n\n        if (statsData.errors.length === 0) {\n            const delayedMsg = setTimeout(() => {\n            }, 100);\n\n            const messages = await tsMessagesPromise;\n            clearTimeout(delayedMsg);\n            statsData.warnings.push(...messages.errors);\n            statsData.warnings.push(...messages.warnings);\n\n\n            stats.compilation.warnings.push(...messages.errors);                \n            stats.compilation.warnings.push(...messages.warnings);\n\n            if (messages.errors.length > 0) {\n                devSocket.warnings(messages.errors);\n            } else if (messages.warnings.length > 0) {\n                devSocket.warnings(messages.warnings);\n            }\n        }\n\n        const messages = formatWebpackMessages(statsData);\n        const isSuccessful = !messages.errors.length && !messages.warnings.length;\n        if (isSuccessful) {\n            console.log(chalk.green('Compiled successfully!'));\n        }\n        if (isSuccessful && (isInteractive || isFirstCompile)) {\n            printInstructions(appName, urls);\n        }\n        isFirstCompile = false;\n\n        if (messages.errors.length) {\n            // Only keep the first error. Others are often indicative\n            // of the same problem, but confuse the reader with noise.\n            if (messages.errors.length > 1) {\n                messages.errors.length = 1;\n            }\n            console.log(chalk.red('Failed to compile.\\n'));\n            console.log(messages.errors.join('\\n\\n'));\n            return;\n        }\n\n        // Show warnings if no errors were found.\n        if (messages.warnings.length) {\n            console.log(chalk.yellow('Compiled with warnings.\\n'));\n            console.log(messages.warnings.join('\\n\\n'));\n\n            // Teach some ESLint tricks.\n            console.log(\n                '\\nSearch for the ' +\n                chalk.underline(chalk.yellow('keywords')) +\n                ' to learn more about each warning.'\n            );\n            console.log(\n                'To ignore, add ' +\n                chalk.cyan('// eslint-disable-next-line') +\n                ' to the line before.\\n'\n            );\n        }\n    });\n\n    return compiler;\n}\n\nexport const webpackDevServerUtils = {\n    createCompiler,\n    prepareUrls,\n};"]}