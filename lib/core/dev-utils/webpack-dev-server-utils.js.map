{"version":3,"file":"webpack-dev-server-utils.js","sourceRoot":"","sources":["../../../src/core/dev-utils/webpack-dev-server-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import address from 'address';\r\nimport url from 'url';\r\nimport chalk from 'chalk';\r\nimport { clearConsole } from '../../core/dev-utils/dev-various-utils';\r\nimport { formatWebpackMessages } from '../../core/dev-utils/format-webpack-msgs';\r\n/* import typescriptFormatter from './typescriptFormatter';\r\nimport forkTsCheckerWebpackPlugin from './ForkTsCheckerWebpackPlugin'; */\r\n\r\nconst isInteractive = process.stdout.isTTY;\r\n\r\nfunction prepareUrls(protocol, host, port) {\r\n    const formatUrl = hostname =>\r\n        url.format({\r\n            protocol,\r\n            hostname,\r\n            port,\r\n            pathname: '/',\r\n        });\r\n    const prettyPrintUrl = hostname =>\r\n        url.format({\r\n            protocol,\r\n            hostname,\r\n            port: chalk.bold(port),\r\n            pathname: '/',\r\n        });\r\n\r\n    const isUnspecifiedHost = host === '0.0.0.0' || host === '::';\r\n    let prettyHost, lanUrlForConfig, lanUrlForTerminal;\r\n    if (isUnspecifiedHost) {\r\n        prettyHost = 'localhost';\r\n        try {\r\n            lanUrlForConfig = address.ip();\r\n            if (lanUrlForConfig) {\r\n                if (\r\n                    /^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(\r\n                        lanUrlForConfig\r\n                    )\r\n                ) {\r\n                    lanUrlForTerminal = prettyPrintUrl(lanUrlForConfig);\r\n                } else {\r\n                    lanUrlForConfig = undefined;\r\n                }\r\n            }\r\n        } catch (_e) {\r\n            // ignored\r\n        }\r\n    } else {\r\n        prettyHost = host;\r\n    }\r\n    const localUrlForTerminal = prettyPrintUrl(prettyHost);\r\n    const localUrlForBrowser = formatUrl(prettyHost);\r\n    return {\r\n        lanUrlForConfig,\r\n        lanUrlForTerminal,\r\n        localUrlForTerminal,\r\n        localUrlForBrowser,\r\n    };\r\n}\r\n\r\nfunction printInstructions(appName, urls) {\r\n    console.log();\r\n    console.log(`You can now view ${chalk.bold(appName)} in the browser.`);\r\n    console.log();\r\n\r\n    if (urls.lanUrlForTerminal) {\r\n        console.log(\r\n            `  ${chalk.bold('Local:')}            ${urls.localUrlForTerminal}`\r\n        );\r\n        console.log(\r\n            `  ${chalk.bold('On Your Network:')}  ${urls.lanUrlForTerminal}`\r\n        );\r\n    } else {\r\n        console.log(`  ${urls.localUrlForTerminal}`);\r\n    }\r\n\r\n    console.log();\r\n    console.log('Note that the development build is not optimized.');\r\n    console.log(\r\n        `To create a production build, use ` +\r\n        `${chalk.cyan(`npm run build`)}.`\r\n    );\r\n    console.log();\r\n}\r\n\r\nfunction createCompiler({ appName, config, devSocket, urls, webpack }) {\r\n    // \"Compiler\" is a low-level interface to Webpack.\r\n    // It lets us listen to some events and provide our own custom messages.\r\n    let compiler;\r\n    try {\r\n        compiler = webpack(config);\r\n    } catch (err) {\r\n        console.log(chalk.red('Failed to compile.'));\r\n        console.log();\r\n        console.log(err.message || err);\r\n        console.log();\r\n        process.exit(1);\r\n    }\r\n\r\n    compiler.hooks.invalid.tap('invalid', () => {\r\n        if (isInteractive) {\r\n            clearConsole();\r\n        }\r\n        console.log('Compiling...');\r\n    });\r\n\r\n    let isFirstCompile = true;\r\n    let tsMessagesPromise;\r\n    let tsMessagesResolver;\r\n\r\n    compiler.hooks.beforeCompile.tap('beforeCompile', () => {\r\n        tsMessagesPromise = new Promise(resolve => {\r\n            tsMessagesResolver = msgs => resolve(msgs);\r\n        });\r\n    });\r\n\r\n    /* forkTsCheckerWebpackPlugin\r\n        .getCompilerHooks(compiler)\r\n        .receive.tap('afterTypeScriptCheck', (diagnostics, lints) => {\r\n            const allMsgs = [...diagnostics, ...lints];\r\n            const format = message =>\r\n                `${message.file}\\n${typescriptFormatter(message, true)}`;\r\n\r\n            tsMessagesResolver({\r\n                errors: allMsgs.filter(msg => msg.severity === 'error').map(format),\r\n                warnings: allMsgs\r\n                    .filter(msg => msg.severity === 'warning')\r\n                    .map(format),\r\n            });\r\n        }); */\r\n\r\n\r\n    compiler.hooks.done.tap('done', async stats => {\r\n        const statsData = stats.toJson({\r\n            all: false,\r\n            warnings: true,\r\n            errors: true,\r\n        });\r\n\r\n        if (statsData.errors.length === 0) {\r\n            const delayedMsg = setTimeout(() => {\r\n            }, 100);\r\n\r\n            const messages = await tsMessagesPromise;\r\n            clearTimeout(delayedMsg);\r\n            statsData.warnings.push(...messages.errors);\r\n            statsData.warnings.push(...messages.warnings);\r\n\r\n\r\n            stats.compilation.warnings.push(...messages.errors);                \r\n            stats.compilation.warnings.push(...messages.warnings);\r\n\r\n            if (messages.errors.length > 0) {\r\n                devSocket.warnings(messages.errors);\r\n            } else if (messages.warnings.length > 0) {\r\n                devSocket.warnings(messages.warnings);\r\n            }\r\n        }\r\n\r\n        const messages = formatWebpackMessages(statsData);\r\n        const isSuccessful = !messages.errors.length && !messages.warnings.length;\r\n        if (isSuccessful) {\r\n            console.log(chalk.green('Compiled successfully!'));\r\n        }\r\n        if (isSuccessful && (isInteractive || isFirstCompile)) {\r\n            printInstructions(appName, urls);\r\n        }\r\n        isFirstCompile = false;\r\n\r\n        if (messages.errors.length) {\r\n            // Only keep the first error. Others are often indicative\r\n            // of the same problem, but confuse the reader with noise.\r\n            if (messages.errors.length > 1) {\r\n                messages.errors.length = 1;\r\n            }\r\n            console.log(chalk.red('Failed to compile.\\n'));\r\n            console.log(messages.errors.join('\\n\\n'));\r\n            return;\r\n        }\r\n\r\n        // Show warnings if no errors were found.\r\n        if (messages.warnings.length) {\r\n            console.log(chalk.yellow('Compiled with warnings.\\n'));\r\n            console.log(messages.warnings.join('\\n\\n'));\r\n\r\n            // Teach some ESLint tricks.\r\n            console.log(\r\n                '\\nSearch for the ' +\r\n                chalk.underline(chalk.yellow('keywords')) +\r\n                ' to learn more about each warning.'\r\n            );\r\n            console.log(\r\n                'To ignore, add ' +\r\n                chalk.cyan('// eslint-disable-next-line') +\r\n                ' to the line before.\\n'\r\n            );\r\n        }\r\n    });\r\n\r\n    return compiler;\r\n}\r\n\r\nexport const webpackDevServerUtils = {\r\n    createCompiler,\r\n    prepareUrls,\r\n};"]}